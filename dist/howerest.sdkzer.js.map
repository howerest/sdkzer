{"version":3,"file":"howerest.sdkzer.js","mappings":"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","sources":["webpack://sdkzer/webpack/universalModuleDefinition","webpack://sdkzer/./src/howerest.sdkzer.ts","webpack://sdkzer/./src/validation_rule.ts","webpack://sdkzer/./src/validation_rules/required_validator.ts","webpack://sdkzer/./src/validation_rules/reg_exp_validator.ts","webpack://sdkzer/./src/validation_rules/number_validator.ts","webpack://sdkzer/./src/validation_rules/length_validator.ts","webpack://sdkzer/./src/validation_rules/email_validator.ts","webpack://sdkzer/./src/validation_rules/allowed_value_switch_validator.ts","webpack://sdkzer/webpack/bootstrap","webpack://sdkzer/webpack/before-startup","webpack://sdkzer/webpack/startup","webpack://sdkzer/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","/* =========================================================================\n\n    howerest 2023 - <hola@davidvalin.com> | www.howerest.com\n    ___________________\n    Apache 2.0 Licensed\n\n    Implements a standarized & friendly API to deal with RESTful http\n    resources that implement endpoints to perform the CRUD operations.\n\n      1. Define a resource by extending Sdkzer class\n      2. Define a \"baseEndpoint()\" function for your class\n      3. Start consuming your resource\n\n=========================================================================== */\n\nexport interface SdkzerParams {\n  id: any\n}\n\nexport class Sdkzer<T extends SdkzerParams> {\n\n  public attrs:T;\n  public pAttrs:T;\n  protected validationRules:object;\n  public invalidMessages:object = {};\n  public syncing:boolean = false;\n  public lastResponse:Response|null = null;\n\n  // Configuration\n  private static DEFAULT_HTTP_HEADERS:THttpHeaders = {};\n  private static PARENTS_FETCH_STRATEGY:string = 'none';\n\n  /**\n   * Creates an instance of a model entity with an API to communicate with\n   * a resource (http RESTful resource)\n   * @param  {object}   attrs   The initial attributes for the resource.\n   *                            Those attributes are in force to defaults()\n   */\n  public constructor(attrs:T = {} as T) {\n    this.attrs = { id: null } as T;\n    this.pAttrs = { id: null } as T;\n\n    this.setDefaults();\n\n    for (let attrKey in attrs) {\n      // Object initialization parameters are in force to default parameters\n      this.attrs[attrKey] = attrs[attrKey];\n      this.pAttrs[attrKey] = attrs[attrKey];\n    }\n  }\n\n\n  /**\n   * Configures Sdkzer constants that determine the behaviour of Sdkzer in all\n   * classes that extend from Sdkzer in the current scope.\n   * @param {ISdkzerConfigOptions} options The configuration options\n   */\n   public static configure(options:ISdkzerConfigOptions) : void {\n    Sdkzer.DEFAULT_HTTP_HEADERS = options.defaultHttpHeaders || {};\n   }\n\n\n  /**\n   * Sets the defaults() values in the instance attributes\n   */\n  public setDefaults() : void {\n    if (this.defaults()) {\n      let defaults = this.defaults();\n      for (let attrKey in defaults) {\n        this.attrs[attrKey] = defaults[attrKey];\n      }\n    }\n  }\n\n\n  /**\n   * Retrieves the defaults for the entity. Override it using your default\n   * attributes if you need any\n   */\n  public defaults() : object {\n    return {};\n  }\n\n\n  /**\n   * Checks wether an entity is a valid entity.\n   * It doesn't perform validation (check validate())\n   */\n  public isValid() : boolean {\n    const attrs = Object.keys(this.invalidMessages);\n    for(const attrName of attrs) {\n      if (this.invalidMessages[attrName] && this.invalidMessages[attrName].length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * Checks wether an entity is a valid entity\n   */\n  public validate() : void {\n    // Reset previous invalid messages from previous validations\n    this.invalidMessages = {};\n    let toValidateAttr, validationRule;\n    const toValidateAttrs = Object.keys(this.validationRules || {});\n\n    // Validate attribute's ValidationRules\n    for(toValidateAttr of toValidateAttrs) {\n      for(validationRule of this.validationRules[toValidateAttr]) {\n        // When the ValidationRule is invalid...\n        if (!validationRule.isValid(this.pAttrs[toValidateAttr], this.attrs[toValidateAttr])) {\n          if (!this.invalidMessages[toValidateAttr]) {\n            this.invalidMessages[toValidateAttr] = [];\n          }\n          // Collect the invalid message from the ValidationRules for that field\n          this.invalidMessages[toValidateAttr].push(validationRule.invalidMessage);\n        } else {\n          this.invalidMessages[toValidateAttr] = [];\n        }\n      }\n    }\n  }\n\n\n  /**\n   * This method can do 3 different things:\n   *\n   * - 1) Reads all attributes. When called as instance.attr()\n   * - 2) Read one attribute. When called as instance.attr('name')\n   * - 3) Set one attribute. When called as instance.attr('name', 'Bruce Lee')\n   *\n   * It's recommended to use this method instead of accessing to attr attribute\n   * directly. This allows you to execute logic before and after setting or\n   * reading attributes. Also, instead of creating 100 setters and getters,\n   * we use a single attr() method\n   *\n   * @param attrName  The attribute name that we want to read or set\n   * @param value     The attribute value that we want to set for \"attrName\"\n   */\n   public attr(attrName?: string, value?: any) : string | number | boolean | object {\n     // Setting an attribute?\n     if (attrName !== undefined && value !== undefined) {\n       // TODO: Add before&after-callback\n       let attrKeys = attrName.split('.');\n       let attrKeyName = '';\n       eval(\"this.attrs['\"+attrKeys.join(\"']['\")+\"'] = \" + (typeof(value) === 'string' ? \"'\"+value+\"'\" : value));\n     } else if (attrName !== undefined && value === undefined) {\n       // Reading an attribute?\n       let attrKeys = attrName.split('.');\n       let attrValue = this.attrs[attrName.split('.')[0]];\n       for (let i = 1; i < attrKeys.length; i++) {\n         attrValue = attrValue[attrKeys[i]];\n       }\n       return attrValue;\n     } else {\n       // Reading all attributes?\n       // TODO: Add before&after-callbacks\n       return this.attrs || {};\n     }\n   }\n\n\n  /**\n   * Retrieves the base resource url. Override it using your base endpoint\n   * for your resource.\n   *\n   * NOTE: You need to define a baseEndpoint method in your entities\n   *  in order to be able to sync with a backend endpoint\n   *  A base endpoint for a RESTful endpoint look like:\n   *    return \"https://www.an-api.com/v1/users\"\n   */\n  public baseEndpoint() : string {\n    return null;\n  }\n\n\n  /**\n   * Retrieves the resource url\n   * NOTE: This method will become the interface to connect using different\n   * http patterns\n   */\n  public resourceEndpoint() : string {\n    return '';\n  }\n\n\n  /**\n   * Checks if the record is not saved in the origin. An record will be\n   * consiered new when it has an \"id\" attribute set to null and it lacks of\n   * a \"lastResponse\" attribute value\n   */\n  public isNew() : boolean {\n    return ((this.attrs.id !== null) ? false : true);\n  }\n\n\n  /**\n   * Checks if the record has changed since the last save\n   */\n  public hasChanged() : boolean {\n    return (this.changedAttrs().length > 0 ? true : false);\n  }\n\n\n  /**\n   * Checks if an attribute has changed from the origin\n   */\n  public hasAttrChanged(attrName:string) : boolean {\n    let i, changedAttrs = this.changedAttrs();\n\n    for (i = 0; i < changedAttrs.length; i++) {\n      if (changedAttrs[i] === attrName) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n\n  /**\n   * Retrieves the name of the changed attributes since the last save\n   */\n  public changedAttrs() : Array<string> {\n    let changedAttrs = [],\n        currAttrs = Object.keys(this.attrs),\n        prevAttrs = Object.keys(this.pAttrs),\n        i, i2;\n\n    for (i=0; i <= currAttrs.length; i++) {\n      for (i2=0; i2 <= prevAttrs.length; i2++) {\n        if (currAttrs[i] !== null && currAttrs[i] === prevAttrs[i2] && this.attrs[currAttrs[i]] !== this.pAttrs[prevAttrs[i2]]) {\n          changedAttrs.push(currAttrs[i]);\n          break;\n        }\n      }\n    }\n\n    return changedAttrs;\n  }\n\n\n  /**\n   * Retrieves the previous attributes\n   */\n  public prevAttrs() : T {\n    let previousAttrs = {} as T;\n    for (let attrKey in this.attrs) {\n      if (this.pAttrs[attrKey] !== this.attrs[attrKey]) {\n        previousAttrs[attrKey] = (this.pAttrs[attrKey] ? this.pAttrs[attrKey] : null);\n      }\n    }\n\n    return previousAttrs;\n  }\n\n\n  /**\n   * Retrieves the previous value prior to last save for a specific attribute\n   */\n  public prevValue(attrName:string) : any {\n    return this.prevAttrs()[attrName];\n  }\n\n\n  /**\n   * Fetches the newest attributes from the origin.\n   */\n  public async fetch(httpQuery?:IQuery, camelize: boolean = true) : Promise<Response> {\n    let _this = this,\n        promise;\n\n    if (this.attrs.id) {\n      this.syncing = true;\n\n      let query:IQuery = {\n        url:        `${this.baseEndpoint()}/${this.attrs.id}`,\n        method:     'GET',\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS || {},\n        qsParams:   {},\n        data:       {}\n      }\n\n      if (typeof(httpQuery) !== 'undefined') {\n        query = {\n          ...query,\n          ...httpQuery\n        };\n      }\n      \n      try {\n        let response = await fetch(`${query.url}${query.qsParams ? qsToString(query.qsParams): ''}`, {\n          method: query.method,\n          headers: query.headers,\n          body: query.data.toString()\n        });\n        // Success\n        _this.syncing = false;\n        // TODO: Keep lastResponse\n        let parsedData = _this.parseRecord(JSON.parse(await response.json()));\n        if (camelize) {\n          // parsedData = util.Camel.camelize(parsedData);\n        }\n        // Keep track of previous attributes\n        _this.pAttrs = parsedData;\n        // Assign the parsed attributes\n        _this.attrs = parsedData;\n        return response;\n      } catch(e) {\n        // Fail\n        _this.syncing = false;\n        return Promise.reject(false);\n      }\n    }\n  }\n\n\n  /**\n   * Parses a single resource record from an incoming HttpResponse data\n   * NOTE: The idea is to return the parsed record data only\n   */\n  public parseRecord(data:object, prefix?:string) : T {\n    return prefix ? data[prefix] : data;\n  }\n\n\n  /**\n   * Parses a collection of resource records from an incoming HttpResponse data\n   * NOTE: The idea is to return the parsed collection of records data only\n   */\n  public static parseCollection(data:Array<object>, prefix?:string) : Array<object> {\n    return prefix ? data[prefix] : data;\n  }\n\n\n  /**\n   * Transforms the local attributes to be processed by the origin in JSON format\n   */\n  public toOriginJSON() : object {\n    return this.attrs;\n  }\n\n\n  /**\n   * Transforms the local attributes to be processed by the origin in XML format\n   */\n  public toOriginXML() : string {\n    return '';\n  }\n\n\n  /**\n   * Transforms the local attributes to be processed by the origin in a specific format\n   * @param format The format to transform into\n   */\n  public toOrigin(format:string = 'json') : object|string {\n    let snapshot;\n\n    switch(format) {\n      case 'json':\n        snapshot = this.toOriginJSON();\n        break;\n      case 'xml':\n        snapshot = this.toOriginXML();\n        break;\n    }\n\n    return snapshot;\n  }\n\n\n  /**\n   * Persists the local state into the origin\n   */\n  public async save(httpHeaders:THttpHeaders = {}) : Promise<Response> {\n    let _this =  this,\n        query:IQuery,\n        request,\n        httpMethod:THttpMethod = (this.attr('id') == null ? 'POST' : 'PUT');\n\n    // New record in the origin?\n    if (httpMethod === 'POST') {\n      query = {\n        method:     httpMethod,\n        url:        this.baseEndpoint(),\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS || {},\n        qsParams:   {},\n        data:       this.toOriginJSON()\n      };\n\n    // Existing record in the origin?\n    } else {\n      query = {\n        method:     httpMethod,\n        url:        `${this.baseEndpoint()}/${this.attrs.id}${query && query.qsParams ? qsToString(query.qsParams): ''}`,\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS || {},\n        qsParams:   {},\n        data:       this.toOriginJSON()\n      };\n    }\n\n    try {\n      const response = await fetch(query.url, {\n        method: query.method,\n        headers: query.headers,\n        body: query.data.toString()\n      });\n      if (httpMethod === 'POST') {\n        // Append id to attributes\n        _this.attrs.id = (await response.json())['id'];\n      }\n      _this.lastResponse = response;\n      return response;\n    } catch(e) {\n      return Promise.reject(false);\n    }\n  }\n\n\n  /**\n   * Destroys the current record in the origin\n   */\n  public async destroy() : Promise<Response> {\n    let query:IQuery;\n\n    query = {\n      method:     'DELETE',\n      url:        `${this.baseEndpoint()}/${this.attrs.id}`,\n      headers:    Sdkzer.DEFAULT_HTTP_HEADERS || {},\n      qsParams:   {},\n      data:       {}\n    };\n\n    try {\n      return await fetch(query.url, {\n        method: query.method,\n        headers: query.headers,\n        body: query.data.toString()\n      })\n    } catch(e) {\n      return Promise.reject(false);\n    }\n  }\n\n\n  /**\n   * Retrieves a collection of records from the origin\n   * @param httpQuery An optional query to be merged with the default one \n   */\n  public static async fetchIndex(httpQuery?:IQuery) : Promise<Array<any>> {\n    let query:IQuery,\n        request,\n        instancesPromise,\n        instances = [],\n        instance;\n\n    instancesPromise = new Promise(async (resolve, reject) => {\n      query = {\n        method:     'GET',\n        url:        `${new this().baseEndpoint()}${httpQuery && httpQuery.qsParams ? qsToString(httpQuery.qsParams): ''}`,\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS || {},\n        qsParams:   {}\n      };\n\n      if (typeof(httpQuery) !== 'undefined') {\n        query = {\n          ...query,\n          ...httpQuery\n        };\n      }\n\n      try {\n        const response = await fetch(query.url, {\n          method: query.method,\n          headers: query.headers\n        });\n        const collectionList = this.parseCollection(JSON.parse(await response.json()));\n        for (let i in collectionList) {\n          instance = new this();\n          instance.attrs = instance.pAttrs = instance.parseRecord(collectionList[i]);\n          instances.push(instance);\n        }\n        resolve(instances);\n      } catch(e) {\n        reject(e);\n      }\n    });\n\n    return instancesPromise;\n  }\n\n\n  /**\n   * Retrieves a single record from the origin\n   * @param id          The record id that we want to fetch by\n   * @param httpQuery   Use a HttpQuery instance to override the default query\n   */\n  public static fetchOne(id: number|string, httpQuery?:IQuery) : Promise<any>  {\n    let model = new this(),\n        query:IQuery,\n        instancePromise,\n        instance;\n\n    instancePromise = new Promise(async (resolve, reject) => {\n      query = {\n        method:     'GET',\n        url:        `${model.baseEndpoint()}/${id}${httpQuery && httpQuery.qsParams ? qsToString(httpQuery.qsParams) : ''}`,\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS || {},\n        qsParams:   {}\n      };\n\n      if (typeof(httpQuery) !== 'undefined') {\n        query = {\n          ...query,\n          ...httpQuery\n        }\n      }\n\n      try {\n        const response = await fetch(query.url, {\n          method: query.method,\n          headers: query.headers\n        })\n        instance = new this();\n        instance.attrs = instance.pAttrs = instance.parseRecord(JSON.parse(await response.json()));\n        resolve(instance);\n      } catch(e) {\n        reject(e);\n      }\n    });\n    return instancePromise;\n  }\n}\n\nfunction qsToString(qs:IQueryString) {\n  let qsPart = '';\n  // Add query string to url\n  if (Object.keys(qs).length > 0) {\n    qsPart += '?';\n    let i=0;\n    let keys = Object.keys(qs);\n    for(let key of keys) {\n      if (i > 0) { qsPart += '&'; }\n      qsPart += `${key}=${qs[key]}`;\n      i++;\n    }\n  }\n  return qsPart;\n}\n\nexport type THttpMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\nexport type THttpHeaders = {\n  [key:string] : string\n}\nexport interface IQueryString {\n  [key:string] : string | number\n}\n\nexport interface IQuery {\n  url?:        string,\n  method?:     THttpMethod,\n  headers?:    THttpHeaders,\n  qsParams?:   IQueryString,\n  data?:       {}\n}\n\nexport interface ISdkzerConfigOptions {\n  defaultHttpHeaders: THttpHeaders\n}\n\nexport { ValidationRule, IValidationRule } from \"./validation_rule\";\nexport { RequiredValidator } from \"./validation_rules/required_validator\"\nexport {\n  RegExpValidator,\n  IParams as IRegExpValidatorParams\n} from \"./validation_rules/reg_exp_validator\"\nexport {\n  NumberValidator,\n  IParams as INumberValidatorParams\n} from \"./validation_rules/number_validator\"\nexport {\n  LengthValidator,\n  IParams as ILengthValidatorParams\n} from \"./validation_rules/length_validator\"\nexport { EmailValidator } from \"./validation_rules/email_validator\"\nexport {\n  AllowedValueSwitchValidator,\n  IParams as IAllowedValueSwitchValidatorParams\n} from \"./validation_rules/allowed_value_switch_validator\"\n","/* --------------------------------------------------------------------------\n\n    howerest 2018 - <hola@davidvalin.com> | www.howerest.com\n\n    Apache 2.0 Licensed\n    -------------------\n\n    ValidationRule: represents a validation rule\n\n--------------------------------------------------------------------------- */\n\nexport class ValidationRule<IParams = {}> implements IValidationRule {\n  protected conditions: Array<Function|any> = [];\n  public fromValue:any;\n  public toValue:any\n  public params: IParams\n  private _invalidMessage = \"Invalid\";\n\n  constructor(params?:any) {\n    this.params = params;\n    this._invalidMessage = \"\";\n  }\n\n  /**\n   * Retrieves the invalid message for the ValidationRule\n   */\n  get invalidMessage(): string {\n    return this._invalidMessage;\n  }\n\n  /**\n   * Checks if the ValidationRule is valid\n   */\n  public isValid(fromValue:any, toValue:any): boolean {\n    this.fromValue = fromValue;\n    this.toValue = toValue;\n\n    // Reset the invalid message\n    this._invalidMessage = '';\n\n    for(let i=0; i < this.conditions.length; i++) {\n      if (this.conditions[i]() === false) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Adds an invalid message to the ValidationRule\n   */\n  public addInvalidMessage(message:string) {\n    this._invalidMessage += message;\n  }\n}\n\nexport interface IValidationRule {\n  params: any;\n  invalidMessage: string;\n\n  isValid(fromValue:any, toValue:any);\n}\n","import {ValidationRule} from '../validation_rule'\n\nexport class RequiredValidator extends ValidationRule {\n  protected conditions:Array<Function> = [\n    () => {\n      let match:boolean = true;\n      if (typeof(this.toValue) === \"undefined\" || this.toValue.length === 0) {\n        match = false;\n        this.addInvalidMessage(\"A value is required and was not provided\");\n      }\n      return match;\n    }\n  ]\n}","import {ValidationRule} from '../validation_rule'\n\nexport interface IParams {\n  rule: RegExp\n}\n\nexport class RegExpValidator extends ValidationRule<IParams> {\n  protected conditions:Array<Function> = [\n    () => {\n      let match:boolean = true;\n      if (!this.toValue || !this.toValue.match || !this.toValue.match(this.params.rule)) {\n        match = false;\n        this.addInvalidMessage(`${this.toValue} is not valid`);\n      }\n      return match;\n    }\n  ]\n}\n","import {ValidationRule} from '../validation_rule'\n\nexport interface IParams {\n  min: number; // min number value allowed\n  max: number; // max number value allowed\n}\n\nexport class NumberValidator extends ValidationRule<IParams> {\n  protected conditions:Array<Function> = [\n    () => {\n      let match:boolean = true;\n\n      if (this.toValue < this.params.min) {\n        match = false;\n        this.addInvalidMessage(`${this.toValue} is smaller than ${this.params.min}`);\n      }\n      if (this.toValue > this.params.max) {\n        match = false;\n        this.addInvalidMessage(`${this.toValue} is bigger than ${this.params.max}`);\n      }\n\n      return match;\n    }\n  ]\n}\n","import {ValidationRule} from '../validation_rule'\n\nexport interface IParams {\n  min: number; // min number of items in the array\n  max: number; // max number of items in the array\n}\n\nexport class LengthValidator extends ValidationRule<IParams> {\n  protected conditions:Array<Function> = [\n    () => {\n      let match:boolean = true;\n\n      if (this.toValue.length < this.params.min) {\n        match = false;\n        this.addInvalidMessage(`${this.toValue} contains less than ${this.params.min} items`);\n      }\n      if (this.toValue.length > this.params.max) {\n        match = false;\n        this.addInvalidMessage(`${this.toValue} contains more than ${this.params.max} items`);\n      }\n\n      return match;\n    }\n  ]\n}\n","import {ValidationRule} from '../validation_rule'\nimport {RegExpValidator} from './reg_exp_validator'\n\nexport class EmailValidator extends ValidationRule {\n  protected conditions:Array<Function> = [\n    // Check for email regexp...\n    () => {\n      let match:boolean = true;\n      const regExpValidator = new RegExpValidator({ rule: /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i });\n      if (!regExpValidator.isValid(this.fromValue, this.toValue)) {\n        this.addInvalidMessage(`${this.toValue} is not a valid email address`);\n        match = false;\n      }\n      return match;\n    }\n  ]\n}","import {ValidationRule} from '../validation_rule'\n\nexport interface IParams {\n  allowed: Array<{\n    from: string;\n    to: any[];\n  }>\n}\n\nexport class AllowedValueSwitchValidator extends ValidationRule<IParams> {\n  // Sample declaration of allowed transition:\n\n  // {\n  //   allowed: [\n  //     { from: \"open\", to: [\"scheduled\", \"canceled\", \"closed\"] },\n  //     { from: \"close\", to: [\"open\"] }\n  //   ]\n  // }\n\n  protected conditions:Array<Function> = [\n    () => {\n      let match:boolean = false,\n          rule;\n\n      if (this.params && this.params.allowed && this.params.allowed.length) {\n        for (let i = 0; i < this.params.allowed.length; i++) {\n          rule = this.params.allowed[i];\n          if (rule.from && rule.to && rule.to.length) {\n            // Origin value matched\n            if (rule.from === this.fromValue) {\n              // Check that the destination value also allowed\n              for (let i2 = 0; i2 < rule.to.length; i2++) {\n                if (!match) {\n                  if (this.toValue === rule.to[i2]) {\n                    match = true;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      if (!match) {\n        this.addInvalidMessage(`${this.fromValue} cannot change to '${this.toValue}'`);\n      }\n\n      return match;\n    }\n  ]\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(0);\n",""],"names":[],"sourceRoot":""}