{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/howerest.sdkzer.ts","webpack:///external \"js-webservices\""],"names":[],"mappings":"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","file":"howerest.sdkzer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* --------------------------------------------------------------------------\n\n    howerest 2018 - <hola@davidvalin.com> | www.howerest.com\n\n    Apache 2.0 Licensed\n    -------------------\n\n    Implements a standarized & friendly API to deal with RESTful http resources\n    that implement endpoints to perform the CRUD operations\n\n    1. Define a resource:\n    2. Start consuming your resource\n\n--------------------------------------------------------------------------- */\n\nimport { WebServices } from 'js-webservices';\nimport { ValidationRule } from './validation_rule';\n\nexport class Sdkzer {\n\n  private attrs:Object;\n  private pAttrs:Object;\n  private validationRules:Object;\n  private invalidMessages:Object = {};\n  public syncing:boolean = false;\n  public lastResponse:WebServices.HttpResponse = null;\n\n  // Configuration\n  private static DEFAULT_HTTP_HEADERS:WebServices.HttpHeader[] = [];\n  private static HTTP_PATTERN:String = 'restful_crud';\n  private static PARENTS_FETCH_STRATEGY:String = 'none';\n  private static HTTP_QUERY_GUESS_CONFIG:Object = {\n    \"restful_crud\": {\n      \"read_collection\" : {\n        verb: \"GET\",\n        endpoint: ''   },\n      \"read_record\" :     {\n        verb: \"GET\",\n        endpoint: ''   },\n      \"create_record\" :   {\n        verb: \"GET\",\n        endpoint: ''   },\n      \"update_record\":    {\n        verb: \"GET\",\n        endpoint: ''   },\n      \"delete_record\":    {\n        verb: \"GET\",\n        endpoint: ''   }\n    }\n  }\n\n\n  /**\n   * Creates an instance of a model entity with an API to communicate with\n   * a resource (http RESTful resource)\n   * @param  {Object}   attrs   The initial attributes for the resource.\n   *                            Those attributes are in force to defaults()\n   */\n  public constructor(attrs:Object = {}) {\n    this.attrs = { id: null };\n    this.pAttrs = { id: null };\n\n    this.setDefaults();\n\n    for (let attrKey in attrs) {\n      // Object initialization parameters are in force to default parameters\n      this.attrs[attrKey] = attrs[attrKey];\n      this.pAttrs[attrKey] = attrs[attrKey];\n    }\n  }\n\n\n  /**\n   * Configures Sdkzer constants that determine the behaviour of Sdkzer in all\n   * classes that extend from Sdkzer in the current scope.\n   * @param options {ISdkzerConfigOptions} The configuration options\n   */\n   public static configure(options:ISdkzerConfigOptions) : void {\n     if (options['defaultHttpHeaders']) {\n       Sdkzer['DEFAULT_HTTP_HEADERS'] = [];\n       for (let i = 0; i < options['defaultHttpHeaders'].length; i++) {\n         Sdkzer['DEFAULT_HTTP_HEADERS'].push(new WebServices.HttpHeader(options['defaultHttpHeaders'][i]));\n       }\n     }\n     // Sdkzer['HTTP_PATTERN'] = options['httpPattern'] ? options['httpPattern'] : this['HTTP_PATTERN'];\n     // Sdkzer['PARENTS_FETCH_STRATEGY'] = options['parentsFetchStrategy'] ? options['parentsFetchStrategy'] : this['PARENTS_FETCH_STRATEGY'];\n     // Sdkzer['HTTP_QUERY_GUESS_CONFIG'] = options['httpQueryGuessConfig'] ? options['httpQueryGuessConfig'] : this['HTTP_QUERY_GUESS_CONFIG'];\n   }\n\n\n   /**\n    * Checks if Sdkzer has been configured to communicate to RESTful resources\n    */\n   private static usingRestfulCrudHttpPattern() : Boolean {\n     return (Sdkzer['HTTP_PATTERN'] === 'restful_crud' ? true : false);\n   }\n\n\n   /**\n    * Checks if Sdkzer has been configured to communicate using custom CRUD endpoints\n    */\n   private static usingCustomHttpPattern() : Boolean {\n     return (Sdkzer['HTTP_PATTERN'] !== 'restful_crud' ? true : false);\n   }\n\n\n   /**\n    * Checks if Sdkzer is using any fetch strategy once received parent ids\n    */\n   private static usingParentsFetchStrategy() : Boolean {\n     return Sdkzer['PARENTS_FETCH_STRATEGY'] !== 'none' ? true : false;\n   }\n\n\n   /**\n    * Retrieves the http guess config for an specific CRUD operation.\n    * @param {String} operation  Accepts \"create\", \"read\", \"update\" and \"delete\"\n    */\n   private static getHttpQueryGuessConfigFor(operation:String) : Object {\n     if (Sdkzer.usingRestfulCrudHttpPattern()) {\n       return Sdkzer['HTTP_QUERY_GUESS_CONFIG']['restful_crud'];\n     } else {\n       return Sdkzer['HTTP_QUERY_GUESS_CONFIG']['custom'];\n     }\n   }\n\n\n  /**\n   * Sets the defaults() values in the instance attributes\n   */\n  public setDefaults() : void {\n    if (this.defaults()) {\n      let defaults = this.defaults();\n      for (let attrKey in defaults) {\n        this.attrs[attrKey] = defaults[attrKey];\n      }\n    }\n  }\n\n\n  /**\n   * Retrieves the defaults for the entity. Override it using your default\n   * attributes if you need any\n   */\n  public defaults() : Object {\n    return {};\n  }\n\n  /**\n   * Checks wether an entity is a valid entity.\n   * It doesn't perform validation (check validate())\n   */\n  public isValid() : boolean {\n    const attrs = Object.keys(this.invalidMessages);\n    for(const attrName of attrs) {\n      if (this.invalidMessages[attrName] && this.invalidMessages[attrName].length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks wether an entity is a valid entity\n   */\n  public validate() : void {\n    let isValid = true, toValidateAttr, validationRule;\n    const toValidateAttrs = Object.keys(this.validationRules);\n\n    // Validate attribute's ValidationRules\n    for(toValidateAttr of toValidateAttrs) {\n      for(validationRule of this.validationRules[toValidateAttr]) {\n        if (!validationRule.isValid(this.pAttrs[toValidateAttr], this.attrs[toValidateAttr])) {\n          if (!this.invalidMessages[toValidateAttr]) {\n            this.invalidMessages[toValidateAttr] = [];\n          }\n          this.invalidMessages[toValidateAttr].push(validationRule.invalidMessage);\n        } else {\n          this.invalidMessages[toValidateAttr] = [];\n        }\n      }\n    }\n  }\n\n  /**\n   * This method can do 3 different things:\n   *\n   * - 1) Reads all attributes. When called as instance.attr()\n   * - 2) Read one attribute. When called as instance.attr('name')\n   * - 3) Set one attribute. When called as instance.attr('name', 'Bruce Lee')\n   *\n   * It's recommended to use this method instead of accessing to attr attribute\n   * directly. This allows you to execute logic before and after setting or\n   * reading attributes. Also, instead of creating 100 setters and getters,\n   * we use a single attr() method\n   *\n   * @param attrName  The attribute name that we want to read or set\n   * @param value     The attribute value that we want to set for \"attrName\"\n   */\n   public attr(attrName?: string, value?: any) : Object|void {\n     // Setting an attribute?\n     if (attrName !== undefined && value !== undefined) {\n       // TODO: Add before&after-callback\n       let attrKeys = attrName.split('.');\n       let attrKeyName = '';\n       eval(\"this.attrs['\"+attrKeys.join(\"']['\")+\"'] = \" + (typeof(value) === 'string' ? \"'\"+value+\"'\" : value));\n     } else if (attrName !== undefined && value === undefined) {\n       // Reading an attribute?\n       let attrKeys = attrName.split('.');\n       let attrValue = this.attrs[attrName.split('.')[0]];\n       for (let i = 1; i < attrKeys.length; i++) {\n         attrValue = attrValue[attrKeys[i]];\n       }\n       return attrValue;\n     } else {\n       // Reading all attributes?\n       // TODO: Add before&after-callbacks\n       return this.attrs;\n     }\n   }\n\n\n  /**\n   * Retrieves the base resource url. Override it using your base endpoint\n   * for your resource.\n   *\n   * NOTE: You need to define a baseEndpoint method in your entities\n   *  in order to be able to sync with a backend endpoint\n   *  A base endpoint for a RESTful endpoint look like:\n   *    return \"https://www.an-api.com/v1/users\"\n   */\n  public baseEndpoint() : string {\n\n    return null;\n  }\n\n\n  /**\n   * Retrieves the resource url\n   * NOTE: This method will become the interface to connect using different\n   * http patterns\n   */\n  public resourceEndpoint() : String {\n    return '';\n  }\n\n\n  /**\n   * Checks if the record is not saved in the origin. An record will be\n   * consiered new when it has an \"id\" attribute set to null and it lacks of\n   * a \"lastResponse\" attribute value\n   */\n  public isNew() : Boolean {\n    return ((this.attrs['id'] !== null && this.lastResponse !== null) ? false : true);\n  }\n\n\n  /**\n   * Checks if the record has changed since the last save\n   */\n  public hasChanged() : Boolean {\n    return (this.changedAttrs().length > 0 ? true : false);\n  }\n\n\n  /**\n   * Checks if an attribute has changed from the origin\n   */\n  public hasAttrChanged(attrName:string) : Boolean {\n    let i, changedAttrs = this.changedAttrs();\n\n    for (i = 0; i < changedAttrs.length; i++) {\n      if (changedAttrs[i] === attrName) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n\n  /**\n   * Retrieves the name of the changed attributes since the last save\n   */\n  public changedAttrs() : Array<String> {\n    let changedAttrs = [],\n        currAttrs = Object.keys(this['attrs']),\n        prevAttrs = Object.keys(this['pAttrs']),\n        i, i2;\n\n    for (i=0; i <= currAttrs.length; i++) {\n      for (i2=0; i2 <= prevAttrs.length; i2++) {\n        if (currAttrs[i] !== null && currAttrs[i] === prevAttrs[i2] && this.attrs[currAttrs[i]] !== this.pAttrs[prevAttrs[i2]]) {\n          changedAttrs.push(currAttrs[i]);\n          break;\n        }\n      }\n    }\n\n    return changedAttrs;\n  }\n\n\n  /**\n   * Retrieves the previous attributes\n   */\n  public prevAttrs() : Object {\n    let previousAttrs = {};\n    for (let attrKey in this.attrs) {\n      if (this.pAttrs[attrKey] !== this.attrs[attrKey]) {\n        previousAttrs[attrKey] = (this.pAttrs[attrKey] ? this.pAttrs[attrKey] : null);\n      }\n    }\n\n    return previousAttrs;\n  }\n\n\n  /**\n   * Retrieves the previous value prior to last save for a specific attribute\n   */\n  public prevValue(attrName:string) : any {\n    return this.prevAttrs()[attrName];\n  }\n\n\n  /**\n   * Fetches the newest attributes from the origin.\n   */\n  public fetch(httpQuery?:WebServices.HttpQuery, camelize: Boolean = true) : Promise<WebServices.HttpResponse> {\n    let _this = this,\n        promise;\n\n    if (this.attrs['id']) {\n      this.syncing = true;\n\n      let query = new WebServices.HttpQuery({\n        httpMethod: \"GET\",\n        endpoint:   this.baseEndpoint() + '/' + this.attrs['id'],\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS ? Sdkzer.DEFAULT_HTTP_HEADERS : [],\n        qsParams:   {},\n        data:       {}\n      });\n\n      if (typeof(httpQuery) !== 'undefined') {\n        query = WebServices.Merger.mergeHttpQueries([ query, httpQuery ]);\n      }\n\n      let request = new WebServices.HttpRequest(query);\n      promise = request.promise;\n      promise.then(\n        // Success\n        (response) => {\n          _this.syncing = false;\n\n          // TODO: Keep lastResponse\n          let parsedData = _this.$parse(response.data);\n\n          if (camelize) {\n            // parsedData = util.Camel.camelize(parsedData);\n          }\n          // Keep track of previous attributes\n          _this.pAttrs = parsedData;\n          // Assign the parsed attributes\n          _this.attrs = parsedData;\n        },\n        // Fail\n        (response) => {\n          _this.syncing = false;\n        }\n      );\n    }\n\n    if (typeof(promise) === 'undefined') {\n      promise = Promise.reject(false);\n    }\n\n    return promise;\n  }\n\n\n  /**\n   * Parses the resources data from an incoming HttpResponse\n   * The idea is to return the resources attributes exclusively\n   */\n  public $parse(data:Object, dataPrefixKey?:string) : Object {\n    if (dataPrefixKey !== null && data[dataPrefixKey]) {\n      return data[dataPrefixKey];\n    } else {\n      return data;\n    }\n  }\n\n\n  /**\n   * Transforms the local attributes to be processed by the origin in JSON format\n   */\n  public toOriginJSON() : Object {\n    return this.attrs;\n  }\n\n\n  /**\n   * Transforms the local attributes to be processed by the origin in XML format\n   */\n  public toOriginXML() : String {\n    // TODO: Implement\n    return '';\n  }\n\n\n  /**\n   * Transforms the local attributes to be processed by the origin in a specific format\n   */\n  public toOrigin(format:string) : Object|String {\n    switch(format) {\n      case 'json':\n        this.toOriginJSON();\n        break;\n     case 'xml':\n       this.toOriginXML();\n       break;\n    }\n\n    return this.attrs;\n  }\n\n\n  /**\n   * Saves the local object into the origin\n   */\n  public save(httpHeaders:WebServices.HttpHeader[] = []) : Promise<WebServices.HttpResponse> {\n    let _this =  this,\n        query,\n        request,\n        httpMethod = (this.attr('id') == null ? \"POST\" : \"PUT\");\n\n    // New record in the origin?\n    if (httpMethod==\"POST\") {\n      query = new WebServices.HttpQuery({\n        httpMethod: httpMethod,\n        endpoint:   this.baseEndpoint(),\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS ? Sdkzer.DEFAULT_HTTP_HEADERS : [],\n        qsParams:   {},\n        data:       this.toOriginJSON()\n      });\n\n    // Existing record in the origin?\n    } else {\n      query = new WebServices.HttpQuery({\n        httpMethod: httpMethod,\n        endpoint:   this.baseEndpoint()+'/'+this.attrs['id'],\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS ? Sdkzer.DEFAULT_HTTP_HEADERS : [],\n        qsParams:   {},\n        data:       this.toOriginJSON()\n      });\n    }\n\n    request = new WebServices.HttpRequest(query);\n    return request.promise.then(\n      // Success\n      (response) => {\n        if (httpMethod==\"POST\") {\n          // Append id to attributes\n          _this.attrs['id'] = response.data['id'];\n        }\n        _this.lastResponse = response;\n      }\n    );\n  }\n\n\n  /**\n   * Destroys the current record in the origin\n   */\n  public destroy() : Promise<any> {\n    let query,\n        request;\n\n    query = new WebServices.HttpQuery({\n      httpMethod: \"DELETE\",\n      endpoint:   this.baseEndpoint()+'/'+this.attrs['id'],\n      headers:    Sdkzer.DEFAULT_HTTP_HEADERS ? Sdkzer.DEFAULT_HTTP_HEADERS : [],\n      qsParams:   {},\n      data:       {}\n    });\n    request = new WebServices.HttpRequest(query);\n    return request.promise;\n  }\n\n\n  /**\n   * Retrieves a collection of records from the origin\n   */\n  public static fetchIndex(httpQuery?:WebServices.HttpQuery) : Promise<Array<any>> {\n    let query,\n        request,\n        instancesPromise,\n        instances = [],\n        instance;\n\n    instancesPromise = new Promise((resolve, reject) => {\n      query = new WebServices.HttpQuery({\n        httpMethod: \"GET\",\n        endpoint:   (new this().baseEndpoint()),\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS ? Sdkzer.DEFAULT_HTTP_HEADERS : [],\n        qsParams:   {},\n        data:       {}\n      });\n\n      if (typeof(httpQuery) !== 'undefined') {\n        query = WebServices.Merger.mergeHttpQueries([ query, httpQuery ]);\n      }\n\n      request = new WebServices.HttpRequest(query);\n      request.promise.then((response) => {\n        for(let i in response.data) {\n          instance = new this();\n          instance.attrs = instance.pAttrs = instance.$parse(response.data[i]);\n          instances.push(instance);\n        }\n        resolve(instances);\n      }, (error) => {\n        reject(error);\n      });\n    });\n\n    return instancesPromise;\n  }\n\n\n  /**\n   * Retrieves a single record from the origin\n   * @param id          The record id that we want to fetch by\n   * @param httpQuery   Use a HttpQuery instance to override the default query\n   */\n  public static fetchOne(id: Number, httpQuery?:WebServices.HttpQuery) : Promise<any>  {\n    let model = new this(),\n        query,\n        request,\n        instancePromise,\n        instance;\n\n    instancePromise = new Promise((resolve, reject) => {\n      query = new WebServices.HttpQuery({\n        httpMethod: \"GET\",\n        endpoint:   model.baseEndpoint()+'/'+id,\n        headers:    Sdkzer.DEFAULT_HTTP_HEADERS ? Sdkzer.DEFAULT_HTTP_HEADERS : [],\n        qsParams:   {},\n        data:       {}\n      });\n\n      if (typeof(httpQuery) !== 'undefined') {\n        query = WebServices.Merger.mergeHttpQueries([ query, httpQuery ]);\n      }\n\n      request = new WebServices.HttpRequest(query);\n      request.promise.then((response) => {\n        instance = new this();\n        instance.attrs = instance.pAttrs = instance.$parse(response.data);\n        resolve(instance);\n      }, (error) => {\n        reject(error);\n      });\n    });\n    return instancePromise;\n  }\n}\n\nexport interface ISdkzerConfigOptions {\n  defaultHttpHeaders:string;\n  // httpPattern?:String;\n  // parentsFetchStrategy?:String;\n  // httpQueryGuessConfig?:IHttpQueryGuessConfig;\n}\n\nexport interface IHttpQueryGuessConfig {\n  restful:Object;\n}\n","module.exports = require(\"js-webservices\");"],"sourceRoot":""}